/** @jsx jsx */
import * as React from "react"
import { jsx } from "theme-ui"
import { hidden } from "@lekoarts/gatsby-theme-cara/src/styles/utils"

const icons = {
  triangle: {
    shape: (
      <path d="M27.5318 9.91614C29.1238 2.87791 28.7048 1.46275 25.9398 0.615624C22.7559 -0.359848 19.4047 5.20823 17.3407 11.9449C16.7294 13.9402 16.5899 16.0311 16.4622 17.9428C16.409 18.7405 16.3578 19.507 16.2753 20.2223C16.0145 22.4847 16.2204 23.9091 18.52 25.4435C20.6679 25.9441 22.6721 24.9143 23.6775 18.8815C24.1342 17.093 24.5044 16.5142 24.9844 15.7638C25.5614 14.862 26.297 13.7121 27.5318 9.91614ZM9.63806 21.935C10.0226 27.6793 8.70312 28.7423 5.81481 28.8857C2.48887 29.051 1.06891 24.7456 0.719324 17.7086C0.644911 16.2106 0.915889 14.8978 1.17348 13.6499C1.42389 12.4367 1.66164 11.2849 1.5572 10.0838C1.22205 6.22955 1.5572 3.46453 4.70743 2.9965C6.91253 3.03777 8.09316 4.63753 8.43422 10.6226C8.43883 12.6054 8.60918 13.6093 8.83919 14.9647C9.08065 16.3876 9.38786 18.1979 9.63806 21.935Z" />
    ),
    viewBox: `0 0 30 30`,
  },
  circle: {
    shape: (
        <path d="M30 0.347657L2.14691 0.347656L2.14691 3.96347L30 3.96347V0.347657ZM8.39646e-08 4.81177L27.8531 4.81177V6.73267L0 6.73267L8.39646e-08 4.81177ZM9.7173 8.31458L25.0845 8.31458V10.8004H9.7173V8.31458Z" />
    ),
    viewBox: `0 0 30 30`,
  },
  arrowUp: {
    shape: (
      <React.Fragment>
        <path d="M28.74,20.81H1.26a1.26,1.26,0,0,1-1-2L14.16.5a1.25,1.25,0,0,1,1-.5h0a1.24,1.24,0,0,1,1,.51L29.75,18.8a1.25,1.25,0,0,1-1,2ZM3.81,18.29H26.22L15.16,3.37Z" />
        {` `}
        <path d="M28.74,42H1.26a1.28,1.28,0,0,1-1.13-.71A1.26,1.26,0,0,1,.26,40l13.9-18.29a1.28,1.28,0,0,1,1-.5h0a1.24,1.24,0,0,1,1,.51L29.75,40a1.26,1.26,0,0,1,.12,1.32A1.28,1.28,0,0,1,28.74,42ZM3.81,39.47H26.22L15.16,24.55Z" />
      </React.Fragment>
    ),
    viewBox: `0 0 30 42`,
  },
  upDown: {
    shape: (
      <React.Fragment>
        <path d="M28.74,44.58a1.28,1.28,0,0,1-1-.51L15.16,27.13l-12.89,17a1.26,1.26,0,1,1-2-1.53l13.9-18.29a1.34,1.34,0,0,1,1-.5,1.24,1.24,0,0,1,1,.51L29.75,42.56a1.27,1.27,0,0,1-1,2Z" />
        <path d="M14.83,20.82h0a1.28,1.28,0,0,1-1-.52L.25,2a1.27,1.27,0,0,1,2-1.51L14.84,17.45,27.73.5a1.26,1.26,0,0,1,2,1.53L15.84,20.32A1.28,1.28,0,0,1,14.83,20.82Z" />
      </React.Fragment>
    ),
    viewBox: `0 0 30 44.58`,
  },
  box: {
    shape: (
        <circle 
            cx="15" 
            cy="15" 
            r="15"
        />
    ),
    viewBox: `0 0 30 30`,
  },
  hexa: {
    shape: (
        <path d="M11.7305 8.30048C12.1629 8.55553 12.622 8.85022 13.1027 9.15877C15.2026 10.5065 17.7147 12.1189 20.2081 11.8491C23.0283 11.5439 25.5002 9.00779 27.3003 7.16094C27.6725 6.77906 28.016 6.42665 28.3279 6.12952C29.3964 5.55189 30 4.89595 30 4.20054C30 1.88094 23.2843 0.000535413 15 0.000535413C6.71573 0.000535413 0 1.88094 0 4.20054C0 6.20571 5.0185 7.88269 11.7305 8.30048Z" />
    ),
    viewBox: `0 0 30 30`,
  },
  cross: {
    shape: (
      <path
        strokeWidth="3px"
        d="M60.5,50l34.8-34.8c2.9-2.9,2.9-7.6,0-10.5c-2.9-2.9-7.6-2.9-10.5,0L50,39.5L15.2,4.7c-2.9-2.9-7.6-2.9-10.5,0    c-2.9,2.9-2.9,7.6,0,10.5L39.5,50L4.7,84.8c-2.9,2.9-2.9,7.6,0,10.5c1.4,1.4,3.3,2.2,5.2,2.2s3.8-0.7,5.2-2.2L50,60.5l34.8,34.8    c1.4,1.4,3.3,2.2,5.2,2.2c1.9,0,3.8-0.7,5.2-2.2c2.9-2.9,2.9-7.6,0-10.5L60.5,50z"
      />
    ),
    viewBox: `0 0 100 100`,
  },
}

type IconType = "triangle" | "circle" | "arrowUp" | "upDown" | "box" | "hexa" | "cross"

type SVGProps = {
  stroke?: boolean
  color?: string | number | any
  width: number
  icon: IconType
  left: string
  top: string
  hiddenMobile?: boolean
}

const Svg = ({ stroke = false, color = ``, width, icon, left, top, hiddenMobile = false }: SVGProps) => (
  <svg
    sx={{
      position: `absolute`,
      stroke: stroke ? `currentColor` : `none`,
      fill: stroke ? `none` : `currentColor`,
      display: hiddenMobile ? hidden : `block`,
      color,
      width,
      left,
      top,
    }}
    viewBox={icons[icon].viewBox}
  >
    {icons[icon].shape}
  </svg>
)

export default Svg
